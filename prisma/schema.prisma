// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id                  String  @id
  nickname            String
  spotifyAccessToken  String?
  spotifyRefreshToken String?
}

model Auth0ManagementApiToken {
  id        String   @id
  token     String
  expiresAt DateTime
}

model songNotes {
  id          Int      @id @default(autoincrement())
  userID      String
  commName    String
  playlistID  String
  songID      String
  note        String  

  @@unique([userID, playlistID, songID])    
}

model comments {
  id          Int     @id @default(autoincrement())
  userID      String
  playlistID  String
  comment     String
  time        DateTime
}

model playlistPinned {
  id                Int    @id @default(autoincrement())
  userId            String
  playlistID        String
  playlistName      String
  playlistImageLink String
  playlistLink      String
  numberOfTracks    Int

  @@unique([userId, playlistID])
}

model artistPinned {
  id                Int    @id @default(autoincrement())
  userId            String
  artistID          String
  artistName        String
  artistImageLink   String
  artistLink        String

  @@unique([userId, artistID])
}

model songPinned {
  id                Int    @id @default(autoincrement())
  userId            String
  songID            String
  songName          String
  artistName        String
  songImageLink     String
  songLink          String

  @@unique([userId, songID])
}